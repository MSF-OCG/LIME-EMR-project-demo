---
- name: Setup Docker, Docker-compose, Git and Deploy OpenMRS 3
  hosts: all
  become: yes
  vars:
    app_repository: https://github.com/MSF-OCG/LIME-EMR-project-demo.git
    app_url: http://localhost
    app_admin_url: http://localhost/openmrs/login.htm
    git_branch: "main"
    log_dir: "/var/logs/lime/setup"

  tasks:
    - name: Get current date and time
      set_fact:
        current_timestamp: "{{ lookup('pipe', 'date \"+%Y%m%d%H%M%S%Z\"') }}"

    - name: Set log file name
      set_fact:
        log_file: lime_setup_stderr_${{current_timestamp}}.log

    - block:  # Start of block
        - name: Install prerequisites for MacOS
          when: ansible_os_family == "Darwin"
          block:
            - name: Install Docker-compose
              command: brew install docker-compose
              become: no
            - name: Install Git
              command: brew install git
              become: no

        - name: Install prerequisites for Ubuntu
          when: ansible_os_family == "Debian"
          block:
            - name: Install Docker
              apt:
                name: docker.io
                state: present
            - name: Install Docker-compose
              apt:
                name: docker-compose
                state: present
            - name: Install Git
              apt:
                name: git
                state: present

        - name: Check if the repository is already cloned
          stat:
            path: "{{ dest_folder }}.git"
          register: git_repo_check

        - name: Clone the branch from GitHub if not already cloned
          git:
            repo: "{{ app_repository }}"
            dest: "{{ dest_folder }}"
            version: dev
            clone: yes
            update: no
          when: not git_repo_check.stat.exists
          register: git_clone_result

        - name: Display git clone result
          debug:
            var: git_clone_result
          when: git_clone_result is changed

        - name: Grant write access to a file/directory
          file:
            path: "{{ dest_folder }}"
            mode: '0775'  
            recurse: yes 

        - name: Pull the latest branch from GitHub
          git:
            repo: "{{ app_repository }}"
            dest: "{{ dest_folder }}"
            version: "{{ git_branch }}"
            update: yes
            force: yes
          register: git_pull_result

        - name: Display git pull result
          debug:
            var: git_pull_result

        - name: Get the latest commit SHA
          command:
            cmd: git rev-parse HEAD
            chdir: "{{ dest_folder }}"
          register: git_commit_sha

        - name: Display the latest commit SHA
          debug:
            msg: "Latest commit SHA: {{ git_commit_sha.stdout }}"

        - name: Pull images using Docker Compose pull
          docker_compose:
            project_src: "{{ dest_folder }}"
            pull: yes
          register: docker_compose_pull_result

        - name: Run docker-compose for OpenMRS3 
          docker_compose:
            project_src: "{{ dest_folder }}"
            state: present
          register: docker_compose_up_result

        - name: Display Docker Compose up result
          debug:
            var: docker_compose_up_result

        - name: Wait for a few seconds for containers to start
          wait_for:
            timeout: 10

        - name: Confirm Docker containers are running
          command: docker ps
          register: docker_ps_output
          changed_when: false

        - name: Wait for a few seconds for containers to start
          wait_for:
            timeout: 30

        - name: Check if OpenMRS login page is reachable
          uri:
            url: "{{ app_admin_url }}"
            follow_redirects: safe
            return_content: yes
            method: HEAD
            status_code: 200
          register: result
          until: "result.status == 200"
          retries: 18
          delay: 10
          ignore_errors: no

        - name: Display result if URL is reachable
          debug:
            msg: "The OpenMRS login page is reachable."
          when: result.status == 200

        - name: Display error if URL is not reachable
          debug:
            msg: "The OpenMRS login page is not reachable. Status: {{ result.status }} Reason: {{ result.msg }}"
          when: result.failed

      rescue:
        - name: Log the error to a file
          local_action:
            module: shell
            args:
              cmd: "echo 'Error encountered on {{ current_timestamp }}: {{ ansible_failed_task.name }} - {{ ansible_failed_result.msg }}' >> {{ log_dir }}/{{ log_file }}"
